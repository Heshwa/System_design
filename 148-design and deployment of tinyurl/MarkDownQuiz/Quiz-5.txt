
## Question 1
Upon successful allocation of a custom short URL, how does the system modify its records?
### Answer
Since the custom short URL is the base-58 encoding of an available base-10 unique ID, marking that unique ID as unavailable for future use is necessary for the system's integrity. 

On the backend, the system accesses the server with the base-10 equivalent unique ID of that specific base-58 short URL. It marks the ID as unavailable in the range, eliminating any chance of reallocating the same ID to any other request. 
<center> 

![](/api/collection/10370001/4941429335392256/page/5753981720068096/image/5678875803910144?page_type=collection_lesson)

</center>

This technique also helps availability. The node generating short URLs will no longer need to maintain a list of used and unused unique IDs in memory. Instead, a database is maintained for each of the lists. For good performance, this database can be NoSQL.


The above part explains the post-processing of a custom short URL association. Some further details include the following:

1. Once we generate IDs, we put them in the unused list. As soon as we use an ID from the unused list, we put it in the used list. This eliminates the possibility of duplicate association.
2. As encoding guarantees unique mapping between base-10 and base-58, no two long URLs will have the same short URL.

---------------------------------------
