
## Question 1
Which database should we use when we have unstructured data and thereâ€™s a need for high performance?
### Options

1. MongoDB
Correct
MongoDB is a database that stores unstructured data and provides high performance in data-relevant operations. 
----------------------------

2. MySQL
Incorrect

----------------------------

3. Oracle
Incorrect

----------------------------

---------------------------------------------

## Question 2
When should we avoid choosing a relational database for our application? 
### Options

1. When we write an application that expects to handle a large number of read-write operations and concurrent users, but strong consistency is not required
Correct
When strong consistency is not required, and there are many read-write operations and concurrent users, a better choice is to use a NoSQL database. Hence, this is the right option to avoid the relational database. 
----------------------------

2. When we write a financial application, like a stock trading application, and we need our data to be consistent at all times
Incorrect

----------------------------

3. When we write an application to store a lot of complex structured data
Incorrect

----------------------------

---------------------------------------------

## Question 3
What kind of database should we use if we make a retail store application that requires storing the data in tabular format?
### Options

1. Relational database
Correct
Storing tabular data means we have structured data to store; hence, a relational database is a right choice. 
----------------------------

2. Non-relational database
Incorrect

----------------------------

---------------------------------------------

## Question 4
Which kind of database should we use for making an application like Facebook?
### Options

1. Relational database
Incorrect

----------------------------

2. Non-relational database
Correct
The data generated by the Facebook application is mostly unstructured which requires a non-relational database. 
----------------------------

---------------------------------------------

## Question 5
**(Select all that apply.)** We should use a document-oriented database for which applications?
### Options

1. Web-based multiplayer games
Correct
Documents such as JSON and YML store objects in the same structure (as in the game), making the operations within the game easier. Therefore, such games require document-oriented databases to use. 
----------------------------

2. Banking application requiring consistency
Incorrect

----------------------------

3. Social network application, like Facebook, containing complex relationships
Incorrect

----------------------------

4. Real-time feeds
Correct
The real-time feed contains variably structured data (one feed can have different components than the others) for which a document database is a suitable option. 
----------------------------

---------------------------------------------

## Question 6
**(Select all that apply.)** We should use a key-value database for which scenarios?
### Options

1. When we create a social network like Facebook with a lot of complex relationships
Incorrect
A graph database is a suitable option to store a social network with many complex relationships. 
----------------------------

2. When we need to persist user state in our application
Correct
User states are stored using a key-value database. A user ID can be considered key, and states can be assumed as values. 
----------------------------

3. When we implement caching in our application
Correct
A cache like Memcached and Redis are key-value stores used for caching in different use-cases.  
----------------------------

---------------------------------------------
